1、AmazeUI并没有提供需要的JQuery，本项目用2.1.1版本代替，后果未知。
2、后台使用了iframe来嵌套内部局部区域，点击左侧菜单时，改变iframe的target，从而改变网页。后台不需要注重SEO，所以使用iframe没关系。
3、添加控制器会自动添加一个视图文件夹，所以控制器的基类也会有个文件夹，用不到可以删掉。
4、布局页主要是为了解决各个页面公用的部分，特别是<head>里的各种CSS和JS的引用。
5、UI中所有指向网页的url改为指向控制器动作的url，如~/Manage/Setting/Index,~代表网站根目录。资源文件还是使用实际url。
6、因为MVC的文件夹约定，所以目录结构多，可以点击资源管理器上边全部折叠，再按需要展开。
7、数据库文件不要放在bin目录下，因为bin目录下每次改变都会造成session丢失。建议放在App_Data里。
8、建立表时，除了非空、主键约束外，其他外键之类建议在程序里控制，更加灵活点，否者以后管理起来不方便。
9、使用动软生成器生成三层代码，10年前都喜欢把BLL、DAL等分成同一解决方案的不同项目，现在没有必要了。
生成的DAL有个bug，getsingle（）使用了dbhelpersql，改成dbhelpersqlite。
10、运行时，如果只是更改视图的html代码，那么不需要重启，刷新网页就可以看见更新。
11、简单的JS可以直接内联写在html里，如按钮的跳转onclick="window.location.href='User/Register'"。
12、通过复制Login视图，略作修改后作为Register视图。
13、MVC的表单验证采用的是JQuery的Validate插件。
14、控制器中的action可以直接return Content("XXXXX"),而不返回视图，网页就会以存文本显示内容，可以利用这个做简单的提醒。
15、<div class="am-u-lg-6 am-u-md-8 am-u-sm-centered">意思是：大屏幕占6份，中屏幕占8份。写多个才能响应不同大小屏幕。
16、html元素中data-开头的属性，是自定义属性。前端框架一般用类名属性来应用CSS，用自定义属性来应用JS。因为data-XXX="xxx",可以带值，从而可以把参数传给JS。
